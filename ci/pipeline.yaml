---
# locals:
#   vpc_name: &vpc_name kf-vpc-((tgodkin))
#   cluster_name: &cluster_name kf-cluster-((tgodkin))

# resource_types:
# - name: terraform
#   type: registry-image
#   source:
#     repository: ljfranklin/terraform-resource
#     tag: '1.0.10'

resources:
- name: kf-infra
  type: git
  icon: github
  source: {uri: https://github.com/EngineerBetter/kf-infra}

- name: concourse-gcp-tf-bootstrap
  type: git
  icon: github
  source: {uri: https://github.com/EngineerBetter/concourse-gcp-tf-bootstrap}

- name: project-setup-tfstate
  type: gcs-resource
  source:
    bucket: ((project_id))
    json_key: ((inception_gcp_credentials_json))
    versioned_file: ci/terraform.tfstate

# - name: kf-terraform
#   type: terraform
#   icon: terraform
#   source:
#     env_name: default
#     backend_type: gcs
#     backend_config:
#       bucket: ((tfstate_bucket_name))
#       prefix: terraform/state
#     env:
#       GOOGLE_CREDENTIALS: ((gcp_credentials_json))
#       GCE_SERVICE_ACCOUNT: ((gcp_credentials_json))
#     var_files:
#     - kf-pipelines/vars/((env)).yml
#     vars:
#       service_account_email: ci-bot@((project_id)).iam.gserviceaccount.com

jobs:
- name: set-pipeline
  serial: true
  plan:
  - get: kf-infra
    trigger: true
  - set_pipeline: self
    file: kf-infra/ci/pipeline.yaml
    var_files: [kf-infra/envs/((env_name)).yaml]

- name: setup-project
  plan:
  - in_parallel:
    - get: kf-infra
      trigger: true
      passed: [set-pipeline]
    - get: concourse-gcp-tf-bootstrap
    # - get: pcf-ops-image
  - task: bootstrap-terraform
    file: concourse-gcp-tf-bootstrap/tasks/bootstrap.yml
    input_mapping:
      gcp-bootstrap: concourse-gcp-tf-bootstrap
    params:
      BILLING_ACCOUNT_ID: ((billing_account_id))
      BUCKET_LOCATION: ((region))
      FOLDER_NAME: ((bootstrap_bucket_path))
      GCP_CREDENTIALS_JSON: ((inception_gcp_credentials_json))
      ORGANIZATION_ID: ((organization_id))
      PROJECT_ID: ((project_id))
      PROJECT_NAME: ((project_id))
      GCP_FLAKINESS_SLEEP: "60"
    ensure:
      put: project-setup-tfstate
      params:
        file: tfstate-out/terraform.tfstate
  # - put: project-account-and-bucket-terraform
  #   params:
  #     terraform_source: kf-pipelines/terraform/deployments/project-account-and-bucket
  # - load_var: service_creds
  #   file: project-account-and-bucket-terraform/metadata
  #   format: json
  # - task: add-gcp-creds-to-credhub
  #   image: pcf-ops-image
  #   file: kf-pipelines/ci/tasks/add-value-to-credhub.yaml
  #   params:
  #     NAME: /concourse/((concourse_team))/((concourse_pipeline))/gcp_credentials_json
  #     VALUE: ((.:service_creds.gcp_credentials_json))
  #     <<: *credhub-params

# - name: terraform-cluster
#   serial: true
#   plan:
#   - in_parallel:
#     - get: kf-infra
#       trigger: true
#       passed: [set-pipeline]
#     - get: pcf-ops-image
#   - put: kf-terraform
#     params:
#       terraform_source: kf-infra/terraform
#       vars:
#         project_id: ((project_id))
#         region: ((region))
#         vpc_name: *vpc_name
#         cluster_name: *cluster_name