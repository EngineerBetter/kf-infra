---
# locals:
#   vpc_name: &vpc_name kf-vpc-((tgodkin))
#   cluster_name: &cluster_name kf-cluster-((tgodkin))

resource_types:
- name: gcs-resource
  type: registry-image
  source: {repository: frodenas/gcs-resource}

- name: terraform
  type: registry-image
  source:
    repository: ljfranklin/terraform-resource
    tag: '1.0.10'

resources:
- name: kf-infra
  type: git
  icon: github
  source: {uri: https://github.com/EngineerBetter/kf-infra}

- name: concourse-gcp-tf-bootstrap
  type: git
  icon: github
  source: {uri: https://github.com/EngineerBetter/concourse-gcp-tf-bootstrap}

- name: project-setup-tfstate
  type: gcs-resource
  icon: bucket
  source:
    bucket: ((project_id))
    json_key: ((inception_gcp_credentials_json))
    versioned_file: ci/terraform.tfstate

- name: project
  type: terraform
  icon: terraform
  source:
    env_name: ((env_name))-project
    backend_type: gcs
    backend_config:
      bucket: ((project_id))
      prefix: terraform/project-account-and-bucket
    env: {GOOGLE_CREDENTIALS: ((inception_gcp_credentials_json))}
    vars:
      project_id: ((project_id))
      region: ((region))

- name: pcf-ops
  type: registry-image
  icon: docker
  source: {repository: engineerbetter/pcf-ops}

jobs:
- name: set-pipeline
  serial: true
  plan:
  - get: kf-infra
    trigger: true
  - set_pipeline: self
    file: kf-infra/ci/pipeline.yaml
    var_files: [kf-infra/envs/((env_name)).yaml]

- name: setup-project
  plan:
  - in_parallel:
    - get: kf-infra
      trigger: true
      passed: [set-pipeline]
    - get: concourse-gcp-tf-bootstrap
    - get: pcf-ops
  - task: bootstrap-terraform
    file: concourse-gcp-tf-bootstrap/tasks/bootstrap.yml
    input_mapping:
      gcp-bootstrap: concourse-gcp-tf-bootstrap
    params:
      BILLING_ACCOUNT_ID: ((billing_account_id))
      BUCKET_LOCATION: ((region))
      FOLDER_NAME: ((project_folder))
      GCP_CREDENTIALS_JSON: ((inception_gcp_credentials_json))
      ORGANIZATION_ID: ((organization_id))
      PROJECT_ID: ((project_id))
      PROJECT_NAME: ((project_id))
      GCP_FLAKINESS_SLEEP: "60"
    ensure:
      put: project-setup-tfstate
      params:
        file: tfstate-out/terraform.tfstate
  - put: project
    params: {terraform_source: kf-infra/terraform/project}
  - load_var: service_creds
    file: project/metadata
    format: json
  - task: add-gcp-creds-to-credhub
    image: pcf-ops
    file: kf-infra/ci/tasks/credhub.yaml
    params:
      CREDHUB_CA_CERT: ((credhub.ca_cert))
      CREDHUB_SECRET: ((credhub.secret))
      CREDHUB_CLIENT: ((credhub.client))
      CREDHUB_SERVER: ((credhub.server))
    vars:
      args: set --value '((.:service_creds.gcp_credentials_json))' --type value --name /concourse/((concourse_team))/((concourse_pipeline))/gcp_credentials_json

# - name: terraform-cluster
#   serial: true
#   plan:
#   - in_parallel:
#     - get: kf-infra
#       trigger: true
#       passed: [set-pipeline]
#     - get: pcf-ops-image
#   - put: kf-terraform
#     params:
#       terraform_source: kf-infra/terraform
#       vars:
#         project_id: ((project_id))
#         region: ((region))
#         vpc_name: *vpc_name
#         cluster_name: *cluster_name