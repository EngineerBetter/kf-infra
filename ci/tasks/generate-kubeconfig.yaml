platform: linux

image_resource:
  type: registry-image
  source:
    repository: gcr.io/google.com/cloudsdktool/cloud-sdk
    tag: alpine

outputs:
- name: kubeconfig

run:
  path: bash
  args:
  - -euo
  - pipefail
  - -c
  - |
    echo "${GOOGLE_CREDENTIALS}" >kubeconfig/google_application_credentials.json
    project_id="$(python3 -c 'import json, os; print(json.loads(os.environ["GOOGLE_CREDENTIALS"])["project_id"])')"
    gcloud auth activate-service-account --key-file=kubeconfig/google_application_credentials.json --project="$project_id"
    region="${ZONE:-$(gcloud container clusters list --filter "name=$CLUSTER" --format='value(location)')}"
    cat > kubeconfig/kubeconfig <<EOF
    apiVersion: v1
    kind: Config
    current-context: default
    contexts: [{name: default, context: {cluster: default, user: gcp}}]
    users: [{name: gcp, user: {auth-provider: {name: gcp}}}]
    clusters:
    - name: default
      cluster:
        server: "https://$(gcloud container clusters describe "${CLUSTER}" --region "${region}" --format='value(endpoint)')"
        certificate-authority-data: "$(gcloud container clusters describe "${CLUSTER}" --region "${region}" --format='value(masterAuth.clusterCaCertificate)')"
    EOF
    cat > kubeconfig/source <<EOF
    export KUBECONFIG=kubeconfig/kubeconfig
    export GOOGLE_APPLICATION_CREDENTIALS=kubeconfig/google_application_credentials.json
    EOF

params:
  GOOGLE_CREDENTIALS:
  ZONE:
  CLUSTER: